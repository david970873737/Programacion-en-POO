# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1B5AV2PUUtiZ-3i91IuUlFXYk1naZo0K9
"""

#EJERCICIO UML
#---------zona de clases---------
class Usuario:
  def __init__(self, nombre, apellido, n_cuenta, direccion, login, contrasena): #constructor
    self.nombre = input("Ingrese su nombre: ")
    self.apellido = input("Ingrese su apellido: ")
    self.n_cuenta = n_cuenta              #atributos
    self.direccion = direccion
    self.login = login
    self.contrasena = contrasena

    print("-----------------------------------------------------------------")

  #metodos

  def enviar_sugerencias(self, texto ):
    return f"sugerencia enviada por {self.nombre}: {texto}"

  def leer (self):
    return f"{self.nombre} edta leyendo un articulo "

  def comprar( self, producto ):
    return f"{self.nombre} compro el producto: {producto}"

  def vender(self, producto):
    return f"{self.nombre} puso en venta el producto: {producto}"

  def realizar_reclamacion(self, motivo):
    return f"{self.nombre} realizo una reclamacion: {motivo}"

#-----------------------------------------------------------------------------

class Producto:
  def __init__(self,precio, titulo, autor, editorial, anio_edicion, preferencias): #constructor
    self.precio = input("Ingrese el precio del producto: ")
    self.titulo = input("Ingrese el titulo del producto: ")
    self.autor = input("ingrese el nombre del autor")                   #atributos
    self.editorial = editorial
    self.anio_edicion = anio_edicion
    self.preferencias = preferencias

  #metodos

  def vender(self):
    return f"el producto '{self.titulo}' ha sido vendido"

  def comprar(self):
    return f"el producto '{self.titulo}' fue comprado exitosamente"

  def ver_catalogo(self):
    return f"titulo: {self.titulo}  | autor: {self.autor} | precio: ${self.precio}"

#-----------------------------------------------------------------------------

class libro:
  def __init__(self, libro):
     self.libro = input("que libro agregaste?")

class revista:
  def __init__(self, revista):
    self.revista = revista
    print("revista agregada")

class articulo_segunda_mano:
  def __init__(self, articulo_segunda_mano):
    self.articulo_segunda_mano = articulo_segunda_mano
    print("articulo segunda mano agregado")

class novedades:
  def __init__(self, novedades):
    self.novedades = novedades

  def cambiar_clasificacion(self):
    print("clasificacion cambiada")

class articulo_online :
  def __init__(self, articulo_online):
    self.articulo_online = articulo_online


  def publicar(self):
    print("publicando articulo")


#-----------------------------------------------------------------------------
#_----------------------------------------------------------------------------

class Servidor:
  def muestra_pagina(self):
    print ("mostrando pagina")

  def enviar_sugerencia(self):
    return "sugerencia enviada"

  def enviar_datos_compra(self):
    print ("datos de compra enviados")

  def enviar_datos_venta(self):
    print ("datos de venta enviados")
#-----------------------------------------------------------------------------
class Procesador:
  def mandar_datos_venta(self):
    print ("procesando datos de venta")

  def mandar_articulos_online(self):
    print ("procesando articulos online")

  def envia_sugerencia_administrador(self):
    print ("procesando sugerencia del administrador")

  def modificar_stock(self):
    print ("procesando modificacion de stock")

  def realizar_pago(self):
    print ("procesando pago")

  def realizar_cobro(self):
    print ("procesando cobro")

  def actualizar_catalogo(self):
    print ("procesando actualizacion de catalogo")

  def realiza_busqueda(self):
    print ("procesando busqueda")

#-----------------------------------------------------------------------------
class indexador :
  def actualizar_almacen(self):
    print("actualizando almacen.....")

  def enviar_resultado_busqueda(self):
    print("enviando resultado de busqueda.....")

#-----------------------------------------------------------------------------

class recolector:
  def recolectar_datos(self):
    print("recolectando datos.....")
#-----------------------------------------------------------------------------

class hilo :
  def busca_novedades(self):
    print("buscando novedades.....")
#-----------------------------------------------------------------------------

class Editorial:
  def __init__(self,nombre,direccion, telefono ):
    self.nombre = nombre
    self.direccion = direccion
    self.telefono = telefono

  def vender(self, producto):
    return f"la editorial '{self.nombre}' ha vendido el producto: {producto}"


#-----------------------------------------------------------------------------

#algoritmo principal

#hacer instancia del objeto
producto1 = Producto("xxxxx", "xxxxxx ", " xxxxxx", "Salamandra", "1943", "Literatura Infantil")
obj_servidor = Servidor()
procesador1 = Procesador()
dato_indexador = indexador()
dato_recolector = recolector()
hilo1 = hilo()
editorial1 = Editorial("David", "Calle 8 , 1-22", "310687**")

libro1 = libro("agregaste un libro ")
revista1 = revista("agregaste una revista ")
articulo_segunda_mano1 = articulo_segunda_mano("agregaste un articulo der segunda mano ")
novedades1 = novedades("no hay novedades")
articulo_online1 = articulo_online("agregaste articulo online")


print("-----------------------------------------------------------------")

#retorno

resultado1 = usuario1.enviar_sugerencias("Agreguen m√°s libros ")
print(resultado1)

resultado2 = usuario1.comprar(producto1.titulo)
print(resultado2)

resultado3 = usuario1.realizar_reclamacion("Mal servivio")
print(resultado3)

resultado4 = producto1.ver_catalogo()
print(resultado4)

resultado5 = producto1.vender()
print(resultado5)

resultado6 = producto1.comprar()
print(resultado6)


print("-----------------------------------------------------------------")

#llamr metodos normales

obj_servidor.muestra_pagina()
obj_servidor.enviar_datos_compra()
obj_servidor.enviar_datos_venta()


print("-----------------------------------------------------------------")
procesador1.mandar_datos_venta()
procesador1.mandar_articulos_online()
procesador1.envia_sugerencia_administrador()
procesador1.modificar_stock()
procesador1.realizar_pago()
procesador1.realizar_cobro()
procesador1.actualizar_catalogo()
procesador1.realiza_busqueda()

print("-----------------------------------------------------------------")
dato_indexador.actualizar_almacen()
dato_indexador.enviar_resultado_busqueda()

print("-----------------------------------------------------------------")

dato_recolector.recolectar_datos()

hilo1.busca_novedades()

resultado7 = editorial1.vender(producto1.titulo)
print(resultado7)

print("-----------------------------------------------------------------")

resultado8 = libro1.libro
print(resultado8)

resultado9 = revista1.revista
print(resultado9)

resultado10 = articulo_segunda_mano1.articulo_segunda_mano
print(resultado10)

resultado11 = novedades1.novedades
print(resultado11)

resultado12 = articulo_online1.articulo_online
print(resultado12)